[API]
anthropic_api_key = <anthropic_api_key>
anthropic_model = claude-3-5-sonnet-20240620
cohere_api_key = <cohere_api_key>
cohere_model = command-r-plus
groq_api_key = <groq_api_key>
groq_model = llama3-70b-8192
openai_api_key = <openai_api_key>
openai_model = gpt-4o
huggingface_api_key = <huggingface_api_key>
huggingface_model = meta-llama/Llama-3.1-70B-Instruct
openrouter_api_key = <openrouter_api_key>
openrouter_model = mistralai/mistral-7b-instruct:free
deepseek_api_key = <deepseek_api_key>
deepseek_model = deepseek-chat
mistral_api_key = <mistral_api_key>
mistral_model = mistral-large-latest
google_api_key = <google_api_key>
google_model = gemini-1.5-pro
custom_openai_api_key = <key_here>
custom_openai_api_ip = <api_ip_here>
default_api = openai

[Local-API]
kobold_api_IP = http://127.0.0.1:5001/api/v1/generate
kobold_openai_api_IP = http://127.0.0.1:5001/v1/chat/completions
kobold_api_key =
llama_api_IP = http://127.0.0.1:8080/completion
llama_api_key =
ooba_api_key =
ooba_api_IP = http://127.0.0.1:5000/v1/chat/completions
tabby_api_IP = http://127.0.0.1:5000/v1/chat/completions
tabby_api_key =
vllm_api_IP = http://127.0.0.1:8000/v1/chat/completions
vllm_model =
ollama_api_IP = http://127.0.0.1:11434/v1/chat/completions
ollama_api_key =
ollama_model = llama3
aphrodite_api_IP = http://127.0.0.1:8080/completion
aphrodite_api_key =
max_tokens = 4096

[Processing]
processing_choice = cuda

[Settings]
chunk_duration = 30
words_per_second = 3
save_character_chats = False
save_rag_chats = False
local_api_timeout = 90
local_api_retries = 3
local_api_retry_delay = 5
streaming = True
temperature = 0.7
top_p = 0.9
min_p = 0.05
# https://artefact2.github.io/llm-sampling/

[Auto-Save]
save_character_chats = False
save_rag_chats = False


[Prompts]
prompt_sample = "What is the meaning of life?"
video_summarize_prompt = "Above is the transcript of a video. Please read through the transcript carefully. Identify the main topics that are discussed over the course of the transcript. Then, summarize the key points about each main topic in bullet points. The bullet points should cover the key information conveyed about each topic in the video, but should be much shorter than the full transcript. Please output your bullet point summary inside <bulletpoints> tags. Do not repeat yourself while writing the summary."

[Database]
type = sqlite
sqlite_path = Databases/media_summary.db
backup_path = ./tldw_DB_Backups/
#Path to the backup location for the database. If the path does not exist, the backup will not be created.
elasticsearch_host = localhost
elasticsearch_port = 9200
# Additionally you can use elasticsearch as the database type, just replace `sqlite` with `elasticsearch` for `type` and provide the `elasticsearch_host` and `elasticsearch_port` of your configured ES instance.
chroma_db_path = Databases/chroma_db
prompts_db_path = Databases/prompts.db
rag_qa_db_path = Databases/RAG_QA_Chat.db
character_db_path = Databases/chatDB.db

[Embeddings]
embedding_provider = openai
embedding_model = text-embedding-3-small
onnx_model_path = ./App_Function_Libraries/models/onnx_models/
model_dir = ./App_Function_Libraries/models/embedding_models
embedding_api_url = http://localhost:8080/v1/embeddings
embedding_api_key = your_api_key_here
chunk_size = 400
overlap = 200
# 'embedding_provider' Can be 'openai', 'local', or 'huggingface'
# `embedding_model` Set to the model name you want to use for embeddings. For OpenAI, this can be 'text-embedding-3-small', or 'text-embedding-3-large'.
# huggingface: model = dunzhang/stella_en_400M_v5

[Chunking]
method = words
# 'method' Can be 'words' / 'sentences' / 'paragraphs' / 'semantic' / 'tokens'
max_size = 400
overlap = 200
adaptive = false
# Use ntlk+punkt to split text into sentences and then ID average sentence length and set that as the chunk size
multi_level = false
language = english

[Metrics]
log_file_path =
#os.getenv("tldw_LOG_FILE_PATH", "tldw_app_logs.json")
max_bytes =
#int(os.getenv("tldw_LOG_MAX_BYTES", 10 * 1024 * 1024))  # 10 MB
backup_count = 5
#int(os.getenv("tldw_LOG_BACKUP_COUNT", 5))


#[Comments]
#OpenAI Models:
#    gpt-4o
#    gpt-4o-2024-08-06
#    gpt-4o-mini
#    o1-preview
#    o1-mini
#    text-embedding-3-large
#    text-embedding-3-small
#
#Anthropic Models:
#    claude-3-5-sonnet-20241022
#    claude-3-5-sonnet-20240620
#    claude-3-5-haiku-20241022
#    claude-3-opus-20240229
#
#Cohere Models:
#    command-r-plus-08-2024
#    command-r-plus-04-2024
#    command-r-08-2024
#    command-r-03-2024
#
#DeepSeek Models:
#    deepseek-chat
#
#Groq Models:
#    f
#Mistral Models:
#    mistral-large-latest
#    open-mistral-nemo
#    codestral-latest
#    mistral-embed
#    open-mistral-7b
#    open-mixtral-8x7b
#    open-mixtral-8x22b
#    open-codestral-mamba
# Google's Models (11/15/2024): https://ai.google.dev/gemini-api/docs/models/gemini
#   gemini-1.5-pro
#   gemini-1.5-pro-2
#   LearnLM
#   gemini-1.5-flash
#   gemini-1.5-flash-8b
#   aqa
#   text-embedding-004